<?php

namespace {{ namespace }}\DataFixtures\ORM;

use {{ namespace }}\Entity\{{ entity }};
use Doctrine\Common\DataFixtures\OrderedFixtureInterface;
use Doctrine\Common\Persistence\ObjectManager;
use EstinaCMF\CoreBundle\DataFixtures\ORM\AbstractFixture;

/**
 * Signal sample data fixtures.
 */
class Load{{ entity }}Data extends AbstractFixture implements OrderedFixtureInterface
{
    private $numOfEntries = {{ numOfEntries }};

    /**
     * Load dev data
     *
     * @param ObjectManager $manager
     */
    public function loadDev(ObjectManager $manager)
    {
        $service = $this->getService();

        for ($i = 0; $i < $this->numOfEntries; $i++) {
            $service->create($this->newEntity($i));
        }

        $service->save();
    }

    private function newEntity($index)
    {
        $slug = '{{ entity|lower }}.' . $index;
        $entity = $this->getService()->getNew();

{% for setter, meta in fixturedata %}
        $entity->{{ setter }}($this->getRandomValueByType('{{ meta.type }}', '{{ meta.fieldName }}'));
{% endfor %}

{% if sluggable %}
        $entity->setSlug($slug);
{% endif %}
        $this->addReference($slug, $entity);

        return $entity;
    }

    private function getService()
    {
        return $this->container->get('vilturas_order.service.order');
    }

    public function getOrder()
    {
        return 1;
    }
}
